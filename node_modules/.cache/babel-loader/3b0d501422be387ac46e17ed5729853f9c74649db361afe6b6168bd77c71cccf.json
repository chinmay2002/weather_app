{"ast":null,"code":"var _jsxFileName = \"/Users/chinmayjain/Desktop/Weather-App-main/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport Spline from '@splinetool/react-spline';\n// import UilReact from '@iconscout/react-unicons/icons/uil-react'\nimport TopButtons from './Components/TopButtons';\nimport Inputs from './Components/Inputs';\nimport TimeAndLocation from './Components/TimeAndLocation';\nimport TempAndDetail from './Components/TempAndDetail';\nimport Forecast from './Components/Forecast';\n// import GetWeatherData from './Services/WeatherService';\nimport GetFormattedWeatherData from './Services/WeatherService';\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [query, setQuery] = useState({\n    q: 'Pune'\n  });\n  const [units, setUnits] = useState('metric');\n  const [weather, setWeather] = useState(null);\n  useEffect(() => {\n    const fetchWeather = async () => {\n      const message = query.q ? query.q : \"current location.\";\n      toast.info(\"Fetching weather for \" + message);\n      await GetFormattedWeatherData({\n        ...query,\n        units\n      }).then(data => {\n        toast.success(`Successfully fetched weather for ${data.name}, ${data.country}.`);\n        setWeather(data);\n      });\n    };\n    fetchWeather();\n  }, [query, units]);\n  const formatBackground = () => {\n    if (!weather) return \"from-cyan-700 to-blue-700\";\n    const threshold = units === \"metric\" ? 20 : 60;\n    if (weather.temp <= threshold) return \"from-cyan-700 to-blue-700\";\n    return \"from-yellow-700 to-orange-700\";\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-[500px] h-[400px]\",\n      children: /*#__PURE__*/_jsxDEV(Spline, {\n        scene: \"https://prod.spline.design/43XV4c2LZSarqAIU/scene.splinecode\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `mx-auto max-w-screen-md mt-4 py-5 px-32 bg-gradient-to-br  h-fit shadow-xl shadow-gray-400 ${formatBackground()}`,\n      children: [/*#__PURE__*/_jsxDEV(TopButtons, {\n        setQuery: setQuery\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Inputs, {\n        setQuery: setQuery,\n        units: units,\n        setUnits: setUnits\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }, this), weather && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(TimeAndLocation, {\n          weather: weather\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TempAndDetail, {\n          weather: weather\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Forecast, {\n          title: \"hourly forecast\",\n          items: weather.hourly\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Forecast, {\n          title: \"daily forecast\",\n          items: weather.daily\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {\n        autoClose: 5000,\n        theme: \"colored\",\n        newestOnTop: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n  // const FetchWeather = async ()=>{\n  //   const data= await GetFormattedWeatherData({q:'london'});\n  //   // console.log(data)\n  // }\n\n  // FetchWeather();\n  // return (\n  //   <div className=\"mx-auto max-w-screen-md mt-4 py-5 px-32 bg-gradient-to-br from-cyan-600 to-blue-700 shadow-xl shadow-grey-400\">\n  //     <TopButtons/>\n  //     <Inputs/>\n\n  //     <TimeAndLocation/>\n  //     <TempAndDetail/>\n  //     <Forecast title=\"hourly forecast\"/>\n  //     <Forecast title=\"daily forecast\"/>\n  //   </div>\n  // );\n}\n_s(App, \"Vq+U9gVAJ0NNiY8XkgVlV3o/wqA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Spline","TopButtons","Inputs","TimeAndLocation","TempAndDetail","Forecast","GetFormattedWeatherData","ToastContainer","toast","React","useState","useEffect","App","query","setQuery","q","units","setUnits","weather","setWeather","fetchWeather","message","info","then","data","success","name","country","formatBackground","threshold","temp","hourly","daily"],"sources":["/Users/chinmayjain/Desktop/Weather-App-main/src/App.js"],"sourcesContent":["import './App.css';\nimport Spline from '@splinetool/react-spline';\n// import UilReact from '@iconscout/react-unicons/icons/uil-react'\nimport TopButtons from './Components/TopButtons';\nimport Inputs from './Components/Inputs';\nimport TimeAndLocation from './Components/TimeAndLocation';\nimport TempAndDetail from './Components/TempAndDetail';\nimport Forecast from './Components/Forecast';\n// import GetWeatherData from './Services/WeatherService';\nimport GetFormattedWeatherData from './Services/WeatherService';\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport React,{useState,useEffect} from 'react'\n\n\nfunction App() {\n\n  const [query,setQuery] = useState({q: 'Pune'})\n  const [units,setUnits] = useState('metric')\n  const [weather,setWeather] = useState(null)\n\n  useEffect(() => {\n    const fetchWeather = async () => {\n      const message = query.q ? query.q : \"current location.\";\n\n      toast.info(\"Fetching weather for \" + message);\n\n      await GetFormattedWeatherData({ ...query, units }).then((data) => {\n        toast.success(\n          `Successfully fetched weather for ${data.name}, ${data.country}.`\n        );\n\n        setWeather(data);\n      });\n    };\n\n    fetchWeather();\n  }, [query, units]);\n\n  const formatBackground = () => {\n    if (!weather) return \"from-cyan-700 to-blue-700\";\n    const threshold = units === \"metric\" ? 20 : 60;\n    if (weather.temp <= threshold) return \"from-cyan-700 to-blue-700\";\n\n    return \"from-yellow-700 to-orange-700\";\n  };\n\n  return (\n    <>\n            <div className='w-[500px] h-[400px]'>\n            <Spline scene=\"https://prod.spline.design/43XV4c2LZSarqAIU/scene.splinecode\" /></div>\n    \n    <div\n      className={`mx-auto max-w-screen-md mt-4 py-5 px-32 bg-gradient-to-br  h-fit shadow-xl shadow-gray-400 ${formatBackground()}`}\n    >\n      <TopButtons setQuery={setQuery} />\n      <Inputs setQuery={setQuery} units={units} setUnits={setUnits} />\n\n      {weather && (\n        <div>\n          <TimeAndLocation weather={weather} />\n          <TempAndDetail weather={weather} />\n\n          <Forecast title=\"hourly forecast\" items={weather.hourly} />\n          <Forecast title=\"daily forecast\" items={weather.daily} />\n        </div>\n      )}\n\n      <ToastContainer autoClose={5000} theme=\"colored\" newestOnTop={true} />\n\n    </div>\n    </>\n  );\n  // const FetchWeather = async ()=>{\n  //   const data= await GetFormattedWeatherData({q:'london'});\n  //   // console.log(data)\n  // }\n\n  // FetchWeather();\n  // return (\n  //   <div className=\"mx-auto max-w-screen-md mt-4 py-5 px-32 bg-gradient-to-br from-cyan-600 to-blue-700 shadow-xl shadow-grey-400\">\n  //     <TopButtons/>\n  //     <Inputs/>\n\n  //     <TimeAndLocation/>\n  //     <TempAndDetail/>\n  //     <Forecast title=\"hourly forecast\"/>\n  //     <Forecast title=\"daily forecast\"/>\n  //   </div>\n  // );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}